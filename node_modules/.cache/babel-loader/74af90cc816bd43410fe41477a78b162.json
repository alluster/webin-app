{"ast":null,"code":"var _this = this;\n\nimport axios from 'axios';\nvar URL = 'http://localhost:3002';\nexport function getMetadataFromUrl(query, callback) {\n  axios.get(\"\".concat(URL, \"/api/getMetadata/?address=\").concat(encodeURIComponent(query))).then(function (metadata) {\n    return callback({\n      metadata: metadata.data\n    });\n  }).catch(function (err) {\n    return callback({\n      error: err\n    });\n  });\n}\nexport function getDataFromDb(callback) {\n  axios.get(\"\".concat(URL, \"/api/getData\")).then(function (res) {\n    return callback({\n      data: res.data.data\n    });\n  }).catch(function (err) {\n    return callback({\n      error: err\n    });\n  });\n}\n;\nexport var putDataToDB = function putDataToDB(metadata) {\n  axios.post(\"\".concat(URL, \"/api/putData\"), {\n    id: 2,\n    metadata: metadata\n  });\n};\nexport var deleteFromDB = function deleteFromDB(idTodelete) {\n  axios.delete(\"\".concat(URL, \"/api/deleteData\"), {\n    data: {\n      id: idTodelete\n    }\n  });\n};\nexport var updateDB = function updateDB(idToUpdate, updateToApply) {\n  var objIdToUpdate = null;\n\n  _this.state.data.forEach(function (dat) {\n    if (dat.id == idToUpdate) {\n      objIdToUpdate = dat._id;\n    }\n  });\n\n  axios.post(\"\".concat(URL, \"/api/updateData\"), {\n    id: objIdToUpdate,\n    update: {\n      message: updateToApply\n    }\n  });\n};","map":{"version":3,"sources":["/Users/aleksanteriheliovaara/Desktop/projects/webin-app/src/requests.js"],"names":["axios","URL","getMetadataFromUrl","query","callback","get","encodeURIComponent","then","metadata","data","catch","err","error","getDataFromDb","res","putDataToDB","post","id","deleteFromDB","idTodelete","delete","updateDB","idToUpdate","updateToApply","objIdToUpdate","state","forEach","dat","_id","update","message"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAG,uBAAZ;AAEA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6C;AAClDJ,EAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,uCAA6CK,kBAAkB,CAACH,KAAD,CAA/D,GACEI,IADF,CACO,UAAAC,QAAQ;AAAA,WAAIJ,QAAQ,CAAC;AAAEI,MAAAA,QAAQ,EAAEA,QAAQ,CAACC;AAArB,KAAD,CAAZ;AAAA,GADf,EAEEC,KAFF,CAEQ,UAAAC,GAAG;AAAA,WAAIP,QAAQ,CAAC;AAAEQ,MAAAA,KAAK,EAAED;AAAT,KAAD,CAAZ;AAAA,GAFX;AAGD;AAED,OAAO,SAASE,aAAT,CAAuBT,QAAvB,EAAiC;AAChCJ,EAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,mBACJM,IADI,CACC,UAAAO,GAAG;AAAA,WAAIV,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEK,GAAG,CAACL,IAAJ,CAASA;AAAjB,KAAD,CAAZ;AAAA,GADJ,EAEJC,KAFI,CAEE,UAAAC,GAAG;AAAA,WAAIP,QAAQ,CAAC;AAAEQ,MAAAA,KAAK,EAAED;AAAT,KAAD,CAAZ;AAAA,GAFL;AAGD;AAAA;AAGP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACP,QAAD,EAAc;AACrCR,EAAAA,KAAK,CAACgB,IAAN,WAAcf,GAAd,mBAAiC;AAC/BgB,IAAAA,EAAE,EAAE,CAD2B;AAE/BT,IAAAA,QAAQ,EAARA;AAF+B,GAAjC;AAID,CALI;AAOP,OAAO,IAAMU,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU,EAAI;AACtCnB,EAAAA,KAAK,CAACoB,MAAN,WAAgBnB,GAAhB,sBAAsC;AACpCQ,IAAAA,IAAI,EAAE;AACJQ,MAAAA,EAAE,EAAEE;AADA;AAD8B,GAAtC;AAKD,CANI;AAQP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAaC,aAAb,EAA+B;AACnD,MAAIC,aAAa,GAAG,IAApB;;AACA,EAAA,KAAI,CAACC,KAAL,CAAWhB,IAAX,CAAgBiB,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,QAAIA,GAAG,CAACV,EAAJ,IAAUK,UAAd,EAA0B;AACxBE,MAAAA,aAAa,GAAGG,GAAG,CAACC,GAApB;AACD;AACF,GAJD;;AAMA5B,EAAAA,KAAK,CAACgB,IAAN,WAAcf,GAAd,sBAAoC;AAClCgB,IAAAA,EAAE,EAAEO,aAD8B;AAElCK,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAEP;AAAX;AAF0B,GAApC;AAID,CAZI","sourcesContent":["\nimport axios from 'axios';\nconst URL = 'http://localhost:3002'\n\nexport function getMetadataFromUrl(query, callback) {\n\t\taxios.get(`${URL}/api/getMetadata/?address=${encodeURIComponent(query)}`)\n\t\t\t.then(metadata => callback({ metadata: metadata.data }))\n\t\t\t.catch(err => callback({ error: err }));\n}\n\nexport function getDataFromDb(callback) {\n        axios.get(`${URL}/api/getData`)\n\t\t\t.then(res => callback({ data: res.data.data }))\n\t\t\t.catch(err => callback({ error: err }));\n      };\n      \n\nexport const putDataToDB = (metadata) => {  \n    axios.post(`${URL}/api/putData`, {\n      id: 2,\n      metadata\n    });\n  };\n\nexport const deleteFromDB = idTodelete => {\n    axios.delete(`${URL}/api/deleteData`, {\n      data: {\n        id: idTodelete\n      }\n    });\n  };\n\nexport const updateDB = (idToUpdate, updateToApply) => {\n    let objIdToUpdate = null;\n    this.state.data.forEach(dat => {\n      if (dat.id == idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    axios.post(`${URL}/api/updateData`, {\n      id: objIdToUpdate,\n      update: { message: updateToApply }\n    });\n  };\n"]},"metadata":{},"sourceType":"module"}