{"ast":null,"code":"import Keycloak from 'keycloak-js';\nexport var keycloak = Keycloak({\n  url: 'https://keycloak-server.herokuapp.com/auth/',\n  realm: 'journa-app',\n  clientId: 'journa-app',\n  sslRequired: 'extrenal',\n  resource: 'journa-app',\n  publicClient: true\n});\nexport function checkLogin() {\n  keycloak.init({\n    onLoad: 'check-sso'\n  }).success(function (authenticated) {\n    if (authenticated) {\n      localStorage.setItem('kctoken', keycloak.token);\n      localStorage.setItem('authenticated', authenticated);\n      console.log('authenticated:', authenticated);\n    } else {\n      localStorage.setItem('authenticated', false);\n      localStorage.setItem('authenticated', authenticated);\n    }\n  });\n}\nexport function Login() {\n  keycloak.login();\n}\nexport function Logout() {\n  keycloak.logout();\n  localStorage.setItem('authenticated', false);\n  alert(\"Logged Out\");\n}\nexport function Register() {\n  keycloak.register();\n}\nexport function getUserProfile(callback) {\n  keycloak.loadUserProfile().success(function (profile) {\n    callback(profile);\n  }).error(function () {\n    console.log('Error hapened in sign in');\n  });\n}","map":{"version":3,"sources":["/Users/aleksanteriheliovaara/Desktop/projects/webin-app/src/keycloak.js"],"names":["Keycloak","keycloak","url","realm","clientId","sslRequired","resource","publicClient","checkLogin","init","onLoad","success","authenticated","localStorage","setItem","token","console","log","Login","login","Logout","logout","alert","Register","register","getUserProfile","callback","loadUserProfile","profile","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,OAAO,IAAMC,QAAQ,GAAGD,QAAQ,CAAC;AAC7BE,EAAAA,GAAG,EAAE,6CADwB;AAE7BC,EAAAA,KAAK,EAAE,YAFsB;AAG7BC,EAAAA,QAAQ,EAAE,YAHmB;AAI7BC,EAAAA,WAAW,EAAE,UAJgB;AAK7BC,EAAAA,QAAQ,EAAE,YALmB;AAM7BC,EAAAA,YAAY,EAAE;AANe,CAAD,CAAzB;AAUP,OAAO,SAASC,UAAT,GAAsB;AACzBP,EAAAA,QAAQ,CAACQ,IAAT,CAAc;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAd,EAAuCC,OAAvC,CAA+C,UAAAC,aAAa,EAAI;AAC5D,QAAIA,aAAJ,EAAmB;AACfC,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCb,QAAQ,CAACc,KAAzC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,aAAtC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,aAA9B;AACH,KAJD,MAIO;AACHC,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsC,KAAtC;AACAD,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,aAAtC;AAEH;AACJ,GAVD;AAWH;AAED,OAAO,SAASM,KAAT,GAAiB;AACpBjB,EAAAA,QAAQ,CAACkB,KAAT;AACH;AAGD,OAAO,SAASC,MAAT,GAAkB;AACrBnB,EAAAA,QAAQ,CAACoB,MAAT;AACAR,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsC,KAAtC;AACAQ,EAAAA,KAAK,CAAC,YAAD,CAAL;AACH;AAGD,OAAO,SAASC,QAAT,GAAoB;AACvBtB,EAAAA,QAAQ,CAACuB,QAAT;AACH;AAED,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AACrCzB,EAAAA,QAAQ,CAAC0B,eAAT,GAA2BhB,OAA3B,CAAoC,UAACiB,OAAD,EAAa;AAC5CF,IAAAA,QAAQ,CAACE,OAAD,CAAR;AACJ,GAFD,EAEGC,KAFH,CAES,YAAM;AACXb,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,GAJD;AAKH","sourcesContent":["import Keycloak from 'keycloak-js';\n\nexport const keycloak = Keycloak({\n    url: 'https://keycloak-server.herokuapp.com/auth/',\n    realm: 'journa-app',\n    clientId: 'journa-app',\n    sslRequired: 'extrenal',\n    resource: 'journa-app',\n    publicClient: true\n    \n});\n\nexport function checkLogin() { \n    keycloak.init({ onLoad: 'check-sso' }).success(authenticated => {\n        if (authenticated) {\n            localStorage.setItem('kctoken', keycloak.token);\n            localStorage.setItem('authenticated', authenticated);\n            console.log('authenticated:', authenticated)\n        } else {\n            localStorage.setItem('authenticated', false);\n            localStorage.setItem('authenticated', authenticated);\n\n        }\n    });\n}\n\nexport function Login() {\n    keycloak.login();\n}\n\n\nexport function Logout() {\n    keycloak.logout()\n    localStorage.setItem('authenticated', false);\n    alert(\"Logged Out\");\n}\n\n\nexport function Register() {\n    keycloak.register();\n}\n\nexport function getUserProfile(callback) {\n    keycloak.loadUserProfile().success( (profile) => {\n         callback(profile)\n    }).error(() => {    \n        console.log('Error hapened in sign in',)\n    })\n}"]},"metadata":{},"sourceType":"module"}