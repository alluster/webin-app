'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/** Grid column component */

var Gx = function Gx(_ref, _ref2) {
  var gx = _ref2.gx;

  var col = _ref.col,
      breakpoint = _ref.breakpoint,
      props = _objectWithoutProperties(_ref, ['col', 'breakpoint']);

  gx = gx || {};
  var bp = breakpoint || gx.breakpoint || 512;
  var style = {
    boxSizing: 'border-box',
    display: 'inline-block',
    verticalAlign: 'top',
    minWidth: col / 12 * 100 + '%',
    maxWidth: '100%',
    width: 'calc(' + bp * bp + 'px - ' + 100 * bp + '%)'
  };

  return _react2.default.createElement('div', _extends({}, props, { className: 'Gx', style: style }));
};

Gx.propTypes = {
  /** Width of column above the breakpoint. Based on a 12 column grid. All numbers in a row should add up to 12 or less. */
  col: _propTypes2.default.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),
  /** Width in pixels at which columns render side-by-side */
  breakpoint: _propTypes2.default.number
};

Gx.defaultProps = {
  col: 6
};

Gx.contextTypes = {
  gx: _propTypes2.default.object
};

exports.default = Gx;